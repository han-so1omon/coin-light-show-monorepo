[project]
name = 'coin-operated-light-vessel'
version = '1.0'
description = 'Coin-operated light show vessel sub-project'
readme='README.md'
requires-python='>=3.9'
license={file = 'LICENSE'}
keywords = ['art', 'entertainment', 'raspberry-pi']
authors=[
    { name = 'Eric Solomon', email = 'errcsool@engineer.com' }
]
maintainers=[
    { name = 'Eric Solomon', email = 'errcsool@engineer.com' }
]

classifiers = [
    'Development Status :: 3 - Alpha',
    'Intended Audience :: Other Audience',
    'Topic :: Artistic Software',
    'License :: OSI Approved :: MIT License',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3 :: Only',
]

dependencies = [
  "grpcio"
]

[project.scripts]
coin-light-show-vessel = 'vessel:main'

[build-system]
requires = ["hatchling>=1.22.2", "hatch-vcs>=0.3.0"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.sdist]
exclude = [
  "/.github",
  "/docs",
]

[tool.hatch.build.targets.wheel]
packages = ["src/vessel"]

[tool.hatch.envs.default]
dependencies = [
  "coverage[toml]",
  "pytest",
  "pytest-cov",
  "grpcio-tools",
]

[tool.hatch.envs.default.scripts]
test = 'pytest --cov-report=term-missing --cov-config=pyproject.toml --cov=vessel --cov=tests'
protobuf = '''python -m grpc_tools.protoc -I../common/protos --python_out=./src/vessel/rpc --grpc_python_out=./src/vessel/rpc \
  ../common/protos/vessel_instructions.proto ../common/protos/coin_system.proto \
  && ./scripts/convert-grpc-imports.sh'''

[[tool.hatch.envs.default.matrix]]
python = ["3.11.2"]
version = ["1.0"]

# Type checking
[tool.mypy]
disallow_untyped_defs = false
disallow_incomplete_defs = false
follow_imports = "normal"
ignore_missing_imports = true
pretty = true
show_column_numbers = true
show_error_codes = true
warn_no_return = false
warn_unused_ignores = true

# Code coverage
[tool.coverage.run]
branch = true
source_pkgs = ["vessel", "tests"]
omit = []

[tool.coverage.paths]
vessel = ["src/vessel"]
tests = ["tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

# Linting
[tool.ruff.format]
preview = true
quote-style = "single"

[tool.ruff.lint]
preview = true
extend-select = ["C901"]

[tool.ruff.lint.extend-per-file-ignores]
"docs/.hooks/*" = ["INP001", "T201"]

[tool.ruff.lint.isort]
known-first-party = ["foo", "bar"]